@startuml

class User {
    -id: Serial
    -memberName: String
    -memberSurname: String
    -displayName: String
    -secret: String
    -emailAddress: String
    -interests: Collection<Tag>
    -strongSuits: Collection<Tag>
    -reputationPoints: int
    -profilePicture: byte[]

    +register(String name, String email, String secret, Collection<Tag> interests, Collection<Tag> strongSuits, )
    +signIn(String email, String secret)
    +edit(Serial id)
    +delete()
    +validate(String email)
    +follow(Serial id, Serial id)
    +unfollow(Serial id, Serial id)
    +block(Serial id, Serial id)
}

class Administrator {
    -id: Serial
    -memberName: String
    -memberSurname: String
    -displayName: String
    -secret: String


    +register(String name, String email, String secret, Collection<Tag> interests, Collection<Tag> strongSuits, )
    +signIn(String email, String secret)
    +edit(Serial id)
    +delete()
    +deleteMember(Serial id)
    +deleteService(Serial id)
    +deleteEvent(Serial id)
}

class Account {
    -id: Serial
    -memberId: Serial
    -timeCredits: int
    -services: Collection<Service>
    -events: Collection<Event>

    +validateCreditStatus(int duration)
    +validateAccountStatus(Serial id)
    +addCredits(int credits)
    +addReputationPoints(int points)
    +getActiveServices(Serial id)
}
User"1" o-- "1" Account

class Event {
    -id: Serial
    -name: String
    -description: String
    -offererId: Serial
    -tags: Collection<Tag>
    -timestamp: Timestamp
    -duration: int
    -location: Geolocation
    -participants: Collection<id>
    -timestamp: Timestamp

    +createEvent(String name, String description, Timestamp time, Collection<Tag> tags, int duration, Geolocation location)
    +addParticipant(Serial id)
}
Account o-- "1..*" Event

class Service {
    -id
    -name: String
    -description: String
    -offererId: Serial
    -tags: Collection<Tag>
    -timestamp: Timestamp
    -duration: int
    -location: Geolocation
    -participants: Collection<id>
    -maxNumberOfParticipants: int
    -cancellationDeadline: int
    -appliedParticipants: Collection<id>
    -status: ServiceStatus

    +createService(Serial accountId, String name, String description, Timestamp time, int maxNumberOfParticipants, int cancellationDeadline, Collection<Tag> tags, int duration, Geolocation geolocation, FrequencyType frequencyType, repetition int)
    +requestService(String name, String description, Timestamp time, Collection<Tag> tags, int duration, Geolocation geolocation, FrequencyType frequencyType, repetition int)
    +apply(Serial accountId)
    +addParticipant(Serial accountId)
    +setParticipant(Serial accountId)
    +notifyOfferer(Serial accountId, String message)
    +notifyReceiver(Serial accountId, String message)
    +requestService(Serial accountId, String name, String description, Timestamp time,Collection<Tag> tags, int duration, Geolocation geolocation)
    +deleteService()
}
Account o-- "1..*" Service

class Feedback {
    -serviceId: Serial
    -giverMemberId: Serial
    -receiverMemberId: Serial
    -rating: int
    -comment: String

    +giveFeedback(Serial id, Serial id, Feedback feedback)
}
Feedback "1..*" --o "1"Service

@enduml