@startuml
abstract class Member {
  -id: Serial
  -memberName: String
  -memberSurname: String
  -displayName: String
  -secret: String

  +register(String name, String email, String secret, Collection<Tag> interests, Collection<Tag> strongSuits, )
  +edit(Serial id)
  +delete()
}
class User {
    -emailAddress: String
    -interests: Collection<Tag>
    -strongSuits: Collection<Tag>
    -reputationPoints: int
    -profilePicture: byte[]

    +validate(String email)
    +follow(Serial id, Serial id)
    +unfollow(Serial id, Serial id)
    +block(Serial id, Serial id)
}
User --|> Member
class Administrator {
    +deleteMember(Serial id)
    +deleteService(Serial id)
    +deleteEvent(Serial id)
}
Administrator --|> Member

class Account {
    -id: Serial
    -memberId: Serial
    -timeCredits: int
    -services: Collection<Service>
    -events: Collection<Event>

    +validateCreditStatus(int duration)
    +validateAccountStatus(Serial id)
    +addCredits(int credits)
    +addReputationPoints(int points)
    +getActiveServices(Serial id)
}
User"1" -- "1" Account

abstract class Meeting {
    -id
    -name: String
    -description: String
    -offererId: Serial
    -tags: Collection<Tag>
    -timestamp: Timestamp
    -duration: int
    -location: Geolocation
    -participants: Collection<id>

    +addParticipants()
}
Account o-- "1..*" Meeting

class Event {
    -timestamp: Timestamp

    +createEvent(String name, String description, Timestamp time, Collection<Tag> tags, int duration, Geolocation location)
}
Event --|> Meeting

class Service {
    -maxNumberOfParticipants: int
    -cancellationDeadline: int
    -appliedParticipants: Collection<id>
    -status: ServiceStatus

    +createService(String name, String description, Timestamp time, int maxNumberOfParticipants, int cancellationDeadline, Collection<Tag> tags, int duration, Geolocation geolocation)
    +apply(Serial id)
    +setParticipant(Serial id)
    +notifyOfferer(Serial id, String message)
    +notifyReceiver(Serial id, String message)
    +requestService(String name, String description, Timestamp time,Collection<Tag> tags, int duration, Geolocation geolocation)
    +editService(Serial id)
    +updateServiceStatus(ServiceStatus status)
    +deleteService()
}
Service --|> Meeting

class RepeatedService {
    -frequency: FrequencyType
    -repetition: int
}
RepeatedService --|> Service

class Feedback {
    -serviceId: Serial
    -giverMemberId: Serial
    -receiverMemberId: Serial
    -rating: int
    -comment: String

    +giveFeedback(Serial id, Serial id, Feedback feedback)
}
Feedback "1..*" --o "1"Service
Feedback "1..*" --o "1"RepeatedService


@enduml